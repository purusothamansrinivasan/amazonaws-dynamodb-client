/*
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ImportStatus;
import org.openapitools.client.model.InputCompressionType;
import org.openapitools.client.model.InputFormat;
import org.openapitools.client.model.InputFormatOptions;
import org.openapitools.client.model.S3BucketSource;
import org.openapitools.client.model.TableCreationParameters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ImportTableDescription
 */
public class ImportTableDescriptionTest {
    private final ImportTableDescription model = new ImportTableDescription();

    /**
     * Model tests for ImportTableDescription
     */
    @Test
    public void testImportTableDescription() {
        // TODO: test ImportTableDescription
    }

    /**
     * Test the property 'importArn'
     */
    @Test
    public void importArnTest() {
        // TODO: test importArn
    }

    /**
     * Test the property 'importStatus'
     */
    @Test
    public void importStatusTest() {
        // TODO: test importStatus
    }

    /**
     * Test the property 'tableArn'
     */
    @Test
    public void tableArnTest() {
        // TODO: test tableArn
    }

    /**
     * Test the property 'tableId'
     */
    @Test
    public void tableIdTest() {
        // TODO: test tableId
    }

    /**
     * Test the property 'clientToken'
     */
    @Test
    public void clientTokenTest() {
        // TODO: test clientToken
    }

    /**
     * Test the property 's3BucketSource'
     */
    @Test
    public void s3BucketSourceTest() {
        // TODO: test s3BucketSource
    }

    /**
     * Test the property 'errorCount'
     */
    @Test
    public void errorCountTest() {
        // TODO: test errorCount
    }

    /**
     * Test the property 'cloudWatchLogGroupArn'
     */
    @Test
    public void cloudWatchLogGroupArnTest() {
        // TODO: test cloudWatchLogGroupArn
    }

    /**
     * Test the property 'inputFormat'
     */
    @Test
    public void inputFormatTest() {
        // TODO: test inputFormat
    }

    /**
     * Test the property 'inputFormatOptions'
     */
    @Test
    public void inputFormatOptionsTest() {
        // TODO: test inputFormatOptions
    }

    /**
     * Test the property 'inputCompressionType'
     */
    @Test
    public void inputCompressionTypeTest() {
        // TODO: test inputCompressionType
    }

    /**
     * Test the property 'tableCreationParameters'
     */
    @Test
    public void tableCreationParametersTest() {
        // TODO: test tableCreationParameters
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    public void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'endTime'
     */
    @Test
    public void endTimeTest() {
        // TODO: test endTime
    }

    /**
     * Test the property 'processedSizeBytes'
     */
    @Test
    public void processedSizeBytesTest() {
        // TODO: test processedSizeBytes
    }

    /**
     * Test the property 'processedItemCount'
     */
    @Test
    public void processedItemCountTest() {
        // TODO: test processedItemCount
    }

    /**
     * Test the property 'importedItemCount'
     */
    @Test
    public void importedItemCountTest() {
        // TODO: test importedItemCount
    }

    /**
     * Test the property 'failureCode'
     */
    @Test
    public void failureCodeTest() {
        // TODO: test failureCode
    }

    /**
     * Test the property 'failureMessage'
     */
    @Test
    public void failureMessageTest() {
        // TODO: test failureMessage
    }

}
