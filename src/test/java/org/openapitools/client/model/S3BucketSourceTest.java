/*
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for S3BucketSource
 */
public class S3BucketSourceTest {
    private final S3BucketSource model = new S3BucketSource();

    /**
     * Model tests for S3BucketSource
     */
    @Test
    public void testS3BucketSource() {
        // TODO: test S3BucketSource
    }

    /**
     * Test the property 's3BucketOwner'
     */
    @Test
    public void s3BucketOwnerTest() {
        // TODO: test s3BucketOwner
    }

    /**
     * Test the property 's3Bucket'
     */
    @Test
    public void s3BucketTest() {
        // TODO: test s3Bucket
    }

    /**
     * Test the property 's3KeyPrefix'
     */
    @Test
    public void s3KeyPrefixTest() {
        // TODO: test s3KeyPrefix
    }

}
