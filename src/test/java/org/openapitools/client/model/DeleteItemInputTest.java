/*
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.AttributeValue;
import org.openapitools.client.model.ConditionalOperator;
import org.openapitools.client.model.ExpectedAttributeValue;
import org.openapitools.client.model.ReturnConsumedCapacity;
import org.openapitools.client.model.ReturnItemCollectionMetrics;
import org.openapitools.client.model.ReturnValue;
import org.openapitools.client.model.ReturnValuesOnConditionCheckFailure;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DeleteItemInput
 */
public class DeleteItemInputTest {
    private final DeleteItemInput model = new DeleteItemInput();

    /**
     * Model tests for DeleteItemInput
     */
    @Test
    public void testDeleteItemInput() {
        // TODO: test DeleteItemInput
    }

    /**
     * Test the property 'tableName'
     */
    @Test
    public void tableNameTest() {
        // TODO: test tableName
    }

    /**
     * Test the property 'key'
     */
    @Test
    public void keyTest() {
        // TODO: test key
    }

    /**
     * Test the property 'expected'
     */
    @Test
    public void expectedTest() {
        // TODO: test expected
    }

    /**
     * Test the property 'conditionalOperator'
     */
    @Test
    public void conditionalOperatorTest() {
        // TODO: test conditionalOperator
    }

    /**
     * Test the property 'returnValues'
     */
    @Test
    public void returnValuesTest() {
        // TODO: test returnValues
    }

    /**
     * Test the property 'returnConsumedCapacity'
     */
    @Test
    public void returnConsumedCapacityTest() {
        // TODO: test returnConsumedCapacity
    }

    /**
     * Test the property 'returnItemCollectionMetrics'
     */
    @Test
    public void returnItemCollectionMetricsTest() {
        // TODO: test returnItemCollectionMetrics
    }

    /**
     * Test the property 'conditionExpression'
     */
    @Test
    public void conditionExpressionTest() {
        // TODO: test conditionExpression
    }

    /**
     * Test the property 'expressionAttributeNames'
     */
    @Test
    public void expressionAttributeNamesTest() {
        // TODO: test expressionAttributeNames
    }

    /**
     * Test the property 'expressionAttributeValues'
     */
    @Test
    public void expressionAttributeValuesTest() {
        // TODO: test expressionAttributeValues
    }

    /**
     * Test the property 'returnValuesOnConditionCheckFailure'
     */
    @Test
    public void returnValuesOnConditionCheckFailureTest() {
        // TODO: test returnValuesOnConditionCheckFailure
    }

}
