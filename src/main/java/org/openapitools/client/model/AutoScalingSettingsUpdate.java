/*
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AutoScalingPolicyUpdate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the auto scaling settings to be modified for a global table or global secondary index.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T14:20:21.724079+05:30[Asia/Kolkata]", comments = "Generator version: 7.15.0")
public class AutoScalingSettingsUpdate {
  public static final String SERIALIZED_NAME_MINIMUM_UNITS = "MinimumUnits";
  @SerializedName(SERIALIZED_NAME_MINIMUM_UNITS)
  @javax.annotation.Nullable
  private Integer minimumUnits;

  public static final String SERIALIZED_NAME_MAXIMUM_UNITS = "MaximumUnits";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_UNITS)
  @javax.annotation.Nullable
  private Integer maximumUnits;

  public static final String SERIALIZED_NAME_AUTO_SCALING_DISABLED = "AutoScalingDisabled";
  @SerializedName(SERIALIZED_NAME_AUTO_SCALING_DISABLED)
  @javax.annotation.Nullable
  private Boolean autoScalingDisabled;

  public static final String SERIALIZED_NAME_AUTO_SCALING_ROLE_ARN = "AutoScalingRoleArn";
  @SerializedName(SERIALIZED_NAME_AUTO_SCALING_ROLE_ARN)
  @javax.annotation.Nullable
  private String autoScalingRoleArn;

  public static final String SERIALIZED_NAME_SCALING_POLICY_UPDATE = "ScalingPolicyUpdate";
  @SerializedName(SERIALIZED_NAME_SCALING_POLICY_UPDATE)
  @javax.annotation.Nullable
  private AutoScalingPolicyUpdate scalingPolicyUpdate;

  public AutoScalingSettingsUpdate() {
  }

  public AutoScalingSettingsUpdate minimumUnits(@javax.annotation.Nullable Integer minimumUnits) {
    this.minimumUnits = minimumUnits;
    return this;
  }

  /**
   * The minimum capacity units that a global table or global secondary index should be scaled down to.
   * minimum: 1
   * @return minimumUnits
   */
  @javax.annotation.Nullable
  public Integer getMinimumUnits() {
    return minimumUnits;
  }

  public void setMinimumUnits(@javax.annotation.Nullable Integer minimumUnits) {
    this.minimumUnits = minimumUnits;
  }


  public AutoScalingSettingsUpdate maximumUnits(@javax.annotation.Nullable Integer maximumUnits) {
    this.maximumUnits = maximumUnits;
    return this;
  }

  /**
   * The maximum capacity units that a global table or global secondary index should be scaled up to.
   * minimum: 1
   * @return maximumUnits
   */
  @javax.annotation.Nullable
  public Integer getMaximumUnits() {
    return maximumUnits;
  }

  public void setMaximumUnits(@javax.annotation.Nullable Integer maximumUnits) {
    this.maximumUnits = maximumUnits;
  }


  public AutoScalingSettingsUpdate autoScalingDisabled(@javax.annotation.Nullable Boolean autoScalingDisabled) {
    this.autoScalingDisabled = autoScalingDisabled;
    return this;
  }

  /**
   * Disabled auto scaling for this global table or global secondary index.
   * @return autoScalingDisabled
   */
  @javax.annotation.Nullable
  public Boolean getAutoScalingDisabled() {
    return autoScalingDisabled;
  }

  public void setAutoScalingDisabled(@javax.annotation.Nullable Boolean autoScalingDisabled) {
    this.autoScalingDisabled = autoScalingDisabled;
  }


  public AutoScalingSettingsUpdate autoScalingRoleArn(@javax.annotation.Nullable String autoScalingRoleArn) {
    this.autoScalingRoleArn = autoScalingRoleArn;
    return this;
  }

  /**
   * Role ARN used for configuring auto scaling policy.
   * @return autoScalingRoleArn
   */
  @javax.annotation.Nullable
  public String getAutoScalingRoleArn() {
    return autoScalingRoleArn;
  }

  public void setAutoScalingRoleArn(@javax.annotation.Nullable String autoScalingRoleArn) {
    this.autoScalingRoleArn = autoScalingRoleArn;
  }


  public AutoScalingSettingsUpdate scalingPolicyUpdate(@javax.annotation.Nullable AutoScalingPolicyUpdate scalingPolicyUpdate) {
    this.scalingPolicyUpdate = scalingPolicyUpdate;
    return this;
  }

  /**
   * The scaling policy to apply for scaling target global table or global secondary index capacity units.
   * @return scalingPolicyUpdate
   */
  @javax.annotation.Nullable
  public AutoScalingPolicyUpdate getScalingPolicyUpdate() {
    return scalingPolicyUpdate;
  }

  public void setScalingPolicyUpdate(@javax.annotation.Nullable AutoScalingPolicyUpdate scalingPolicyUpdate) {
    this.scalingPolicyUpdate = scalingPolicyUpdate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoScalingSettingsUpdate autoScalingSettingsUpdate = (AutoScalingSettingsUpdate) o;
    return Objects.equals(this.minimumUnits, autoScalingSettingsUpdate.minimumUnits) &&
        Objects.equals(this.maximumUnits, autoScalingSettingsUpdate.maximumUnits) &&
        Objects.equals(this.autoScalingDisabled, autoScalingSettingsUpdate.autoScalingDisabled) &&
        Objects.equals(this.autoScalingRoleArn, autoScalingSettingsUpdate.autoScalingRoleArn) &&
        Objects.equals(this.scalingPolicyUpdate, autoScalingSettingsUpdate.scalingPolicyUpdate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(minimumUnits, maximumUnits, autoScalingDisabled, autoScalingRoleArn, scalingPolicyUpdate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoScalingSettingsUpdate {\n");
    sb.append("    minimumUnits: ").append(toIndentedString(minimumUnits)).append("\n");
    sb.append("    maximumUnits: ").append(toIndentedString(maximumUnits)).append("\n");
    sb.append("    autoScalingDisabled: ").append(toIndentedString(autoScalingDisabled)).append("\n");
    sb.append("    autoScalingRoleArn: ").append(toIndentedString(autoScalingRoleArn)).append("\n");
    sb.append("    scalingPolicyUpdate: ").append(toIndentedString(scalingPolicyUpdate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("MinimumUnits", "MaximumUnits", "AutoScalingDisabled", "AutoScalingRoleArn", "ScalingPolicyUpdate"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AutoScalingSettingsUpdate
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AutoScalingSettingsUpdate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AutoScalingSettingsUpdate is not found in the empty JSON string", AutoScalingSettingsUpdate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AutoScalingSettingsUpdate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AutoScalingSettingsUpdate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("AutoScalingRoleArn") != null && !jsonObj.get("AutoScalingRoleArn").isJsonNull()) && !jsonObj.get("AutoScalingRoleArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AutoScalingRoleArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AutoScalingRoleArn").toString()));
      }
      // validate the optional field `ScalingPolicyUpdate`
      if (jsonObj.get("ScalingPolicyUpdate") != null && !jsonObj.get("ScalingPolicyUpdate").isJsonNull()) {
        AutoScalingPolicyUpdate.validateJsonElement(jsonObj.get("ScalingPolicyUpdate"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AutoScalingSettingsUpdate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AutoScalingSettingsUpdate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AutoScalingSettingsUpdate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AutoScalingSettingsUpdate.class));

       return (TypeAdapter<T>) new TypeAdapter<AutoScalingSettingsUpdate>() {
           @Override
           public void write(JsonWriter out, AutoScalingSettingsUpdate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AutoScalingSettingsUpdate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AutoScalingSettingsUpdate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AutoScalingSettingsUpdate
   * @throws IOException if the JSON string is invalid with respect to AutoScalingSettingsUpdate
   */
  public static AutoScalingSettingsUpdate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AutoScalingSettingsUpdate.class);
  }

  /**
   * Convert an instance of AutoScalingSettingsUpdate to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

