/*
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ProvisionedThroughputOverride;
import org.openapitools.client.model.ReplicaGlobalSecondaryIndex;
import org.openapitools.client.model.TableClass;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a replica to be modified.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T14:20:21.724079+05:30[Asia/Kolkata]", comments = "Generator version: 7.15.0")
public class UpdateReplicationGroupMemberAction {
  public static final String SERIALIZED_NAME_REGION_NAME = "RegionName";
  @SerializedName(SERIALIZED_NAME_REGION_NAME)
  @javax.annotation.Nonnull
  private String regionName;

  public static final String SERIALIZED_NAME_KM_S_MASTER_KEY_ID = "KMSMasterKeyId";
  @SerializedName(SERIALIZED_NAME_KM_S_MASTER_KEY_ID)
  @javax.annotation.Nullable
  private String kmSMasterKeyId;

  public static final String SERIALIZED_NAME_PROVISIONED_THROUGHPUT_OVERRIDE = "ProvisionedThroughputOverride";
  @SerializedName(SERIALIZED_NAME_PROVISIONED_THROUGHPUT_OVERRIDE)
  @javax.annotation.Nullable
  private ProvisionedThroughputOverride provisionedThroughputOverride;

  public static final String SERIALIZED_NAME_GLOBAL_SECONDARY_INDEXES = "GlobalSecondaryIndexes";
  @SerializedName(SERIALIZED_NAME_GLOBAL_SECONDARY_INDEXES)
  @javax.annotation.Nullable
  private List<ReplicaGlobalSecondaryIndex> globalSecondaryIndexes;

  public static final String SERIALIZED_NAME_TABLE_CLASS_OVERRIDE = "TableClassOverride";
  @SerializedName(SERIALIZED_NAME_TABLE_CLASS_OVERRIDE)
  @javax.annotation.Nullable
  private TableClass tableClassOverride;

  public UpdateReplicationGroupMemberAction() {
  }

  public UpdateReplicationGroupMemberAction regionName(@javax.annotation.Nonnull String regionName) {
    this.regionName = regionName;
    return this;
  }

  /**
   * The Region where the replica exists.
   * @return regionName
   */
  @javax.annotation.Nonnull
  public String getRegionName() {
    return regionName;
  }

  public void setRegionName(@javax.annotation.Nonnull String regionName) {
    this.regionName = regionName;
  }


  public UpdateReplicationGroupMemberAction kmSMasterKeyId(@javax.annotation.Nullable String kmSMasterKeyId) {
    this.kmSMasterKeyId = kmSMasterKeyId;
    return this;
  }

  /**
   * The KMS key of the replica that should be used for KMS encryption. To specify a key, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. Note that you should only provide this parameter if the key is different from the default DynamoDB KMS key &lt;code&gt;alias/aws/dynamodb&lt;/code&gt;.
   * @return kmSMasterKeyId
   */
  @javax.annotation.Nullable
  public String getKmSMasterKeyId() {
    return kmSMasterKeyId;
  }

  public void setKmSMasterKeyId(@javax.annotation.Nullable String kmSMasterKeyId) {
    this.kmSMasterKeyId = kmSMasterKeyId;
  }


  public UpdateReplicationGroupMemberAction provisionedThroughputOverride(@javax.annotation.Nullable ProvisionedThroughputOverride provisionedThroughputOverride) {
    this.provisionedThroughputOverride = provisionedThroughputOverride;
    return this;
  }

  /**
   * Replica-specific provisioned throughput. If not specified, uses the source table&#39;s provisioned throughput settings.
   * @return provisionedThroughputOverride
   */
  @javax.annotation.Nullable
  public ProvisionedThroughputOverride getProvisionedThroughputOverride() {
    return provisionedThroughputOverride;
  }

  public void setProvisionedThroughputOverride(@javax.annotation.Nullable ProvisionedThroughputOverride provisionedThroughputOverride) {
    this.provisionedThroughputOverride = provisionedThroughputOverride;
  }


  public UpdateReplicationGroupMemberAction globalSecondaryIndexes(@javax.annotation.Nullable List<ReplicaGlobalSecondaryIndex> globalSecondaryIndexes) {
    this.globalSecondaryIndexes = globalSecondaryIndexes;
    return this;
  }

  public UpdateReplicationGroupMemberAction addGlobalSecondaryIndexesItem(ReplicaGlobalSecondaryIndex globalSecondaryIndexesItem) {
    if (this.globalSecondaryIndexes == null) {
      this.globalSecondaryIndexes = new ArrayList<>();
    }
    this.globalSecondaryIndexes.add(globalSecondaryIndexesItem);
    return this;
  }

  /**
   * Replica-specific global secondary index settings.
   * @return globalSecondaryIndexes
   */
  @javax.annotation.Nullable
  public List<ReplicaGlobalSecondaryIndex> getGlobalSecondaryIndexes() {
    return globalSecondaryIndexes;
  }

  public void setGlobalSecondaryIndexes(@javax.annotation.Nullable List<ReplicaGlobalSecondaryIndex> globalSecondaryIndexes) {
    this.globalSecondaryIndexes = globalSecondaryIndexes;
  }


  public UpdateReplicationGroupMemberAction tableClassOverride(@javax.annotation.Nullable TableClass tableClassOverride) {
    this.tableClassOverride = tableClassOverride;
    return this;
  }

  /**
   * Replica-specific table class. If not specified, uses the source table&#39;s table class.
   * @return tableClassOverride
   */
  @javax.annotation.Nullable
  public TableClass getTableClassOverride() {
    return tableClassOverride;
  }

  public void setTableClassOverride(@javax.annotation.Nullable TableClass tableClassOverride) {
    this.tableClassOverride = tableClassOverride;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateReplicationGroupMemberAction updateReplicationGroupMemberAction = (UpdateReplicationGroupMemberAction) o;
    return Objects.equals(this.regionName, updateReplicationGroupMemberAction.regionName) &&
        Objects.equals(this.kmSMasterKeyId, updateReplicationGroupMemberAction.kmSMasterKeyId) &&
        Objects.equals(this.provisionedThroughputOverride, updateReplicationGroupMemberAction.provisionedThroughputOverride) &&
        Objects.equals(this.globalSecondaryIndexes, updateReplicationGroupMemberAction.globalSecondaryIndexes) &&
        Objects.equals(this.tableClassOverride, updateReplicationGroupMemberAction.tableClassOverride);
  }

  @Override
  public int hashCode() {
    return Objects.hash(regionName, kmSMasterKeyId, provisionedThroughputOverride, globalSecondaryIndexes, tableClassOverride);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateReplicationGroupMemberAction {\n");
    sb.append("    regionName: ").append(toIndentedString(regionName)).append("\n");
    sb.append("    kmSMasterKeyId: ").append(toIndentedString(kmSMasterKeyId)).append("\n");
    sb.append("    provisionedThroughputOverride: ").append(toIndentedString(provisionedThroughputOverride)).append("\n");
    sb.append("    globalSecondaryIndexes: ").append(toIndentedString(globalSecondaryIndexes)).append("\n");
    sb.append("    tableClassOverride: ").append(toIndentedString(tableClassOverride)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("RegionName", "KMSMasterKeyId", "ProvisionedThroughputOverride", "GlobalSecondaryIndexes", "TableClassOverride"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(Arrays.asList("RegionName"));
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateReplicationGroupMemberAction
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateReplicationGroupMemberAction.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateReplicationGroupMemberAction is not found in the empty JSON string", UpdateReplicationGroupMemberAction.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateReplicationGroupMemberAction.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateReplicationGroupMemberAction` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdateReplicationGroupMemberAction.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("RegionName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `RegionName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("RegionName").toString()));
      }
      if ((jsonObj.get("KMSMasterKeyId") != null && !jsonObj.get("KMSMasterKeyId").isJsonNull()) && !jsonObj.get("KMSMasterKeyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `KMSMasterKeyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("KMSMasterKeyId").toString()));
      }
      // validate the optional field `ProvisionedThroughputOverride`
      if (jsonObj.get("ProvisionedThroughputOverride") != null && !jsonObj.get("ProvisionedThroughputOverride").isJsonNull()) {
        ProvisionedThroughputOverride.validateJsonElement(jsonObj.get("ProvisionedThroughputOverride"));
      }
      if (jsonObj.get("GlobalSecondaryIndexes") != null && !jsonObj.get("GlobalSecondaryIndexes").isJsonNull()) {
        JsonArray jsonArrayglobalSecondaryIndexes = jsonObj.getAsJsonArray("GlobalSecondaryIndexes");
        if (jsonArrayglobalSecondaryIndexes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("GlobalSecondaryIndexes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `GlobalSecondaryIndexes` to be an array in the JSON string but got `%s`", jsonObj.get("GlobalSecondaryIndexes").toString()));
          }

          // validate the optional field `GlobalSecondaryIndexes` (array)
          for (int i = 0; i < jsonArrayglobalSecondaryIndexes.size(); i++) {
            ReplicaGlobalSecondaryIndex.validateJsonElement(jsonArrayglobalSecondaryIndexes.get(i));
          };
        }
      }
      // validate the optional field `TableClassOverride`
      if (jsonObj.get("TableClassOverride") != null && !jsonObj.get("TableClassOverride").isJsonNull()) {
        TableClass.validateJsonElement(jsonObj.get("TableClassOverride"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateReplicationGroupMemberAction.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateReplicationGroupMemberAction' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateReplicationGroupMemberAction> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateReplicationGroupMemberAction.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateReplicationGroupMemberAction>() {
           @Override
           public void write(JsonWriter out, UpdateReplicationGroupMemberAction value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateReplicationGroupMemberAction read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateReplicationGroupMemberAction given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateReplicationGroupMemberAction
   * @throws IOException if the JSON string is invalid with respect to UpdateReplicationGroupMemberAction
   */
  public static UpdateReplicationGroupMemberAction fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateReplicationGroupMemberAction.class);
  }

  /**
   * Convert an instance of UpdateReplicationGroupMemberAction to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

