/*
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.PointInTimeRecoveryStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The description of the point in time settings applied to the table.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T14:20:21.724079+05:30[Asia/Kolkata]", comments = "Generator version: 7.15.0")
public class PointInTimeRecoveryDescription {
  public static final String SERIALIZED_NAME_POINT_IN_TIME_RECOVERY_STATUS = "PointInTimeRecoveryStatus";
  @SerializedName(SERIALIZED_NAME_POINT_IN_TIME_RECOVERY_STATUS)
  @javax.annotation.Nullable
  private PointInTimeRecoveryStatus pointInTimeRecoveryStatus;

  public static final String SERIALIZED_NAME_EARLIEST_RESTORABLE_DATE_TIME = "EarliestRestorableDateTime";
  @SerializedName(SERIALIZED_NAME_EARLIEST_RESTORABLE_DATE_TIME)
  @javax.annotation.Nullable
  private OffsetDateTime earliestRestorableDateTime;

  public static final String SERIALIZED_NAME_LATEST_RESTORABLE_DATE_TIME = "LatestRestorableDateTime";
  @SerializedName(SERIALIZED_NAME_LATEST_RESTORABLE_DATE_TIME)
  @javax.annotation.Nullable
  private OffsetDateTime latestRestorableDateTime;

  public PointInTimeRecoveryDescription() {
  }

  public PointInTimeRecoveryDescription pointInTimeRecoveryStatus(@javax.annotation.Nullable PointInTimeRecoveryStatus pointInTimeRecoveryStatus) {
    this.pointInTimeRecoveryStatus = pointInTimeRecoveryStatus;
    return this;
  }

  /**
   * &lt;p&gt;The current state of point in time recovery:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ENABLED&lt;/code&gt; - Point in time recovery is enabled.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;DISABLED&lt;/code&gt; - Point in time recovery is disabled.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
   * @return pointInTimeRecoveryStatus
   */
  @javax.annotation.Nullable
  public PointInTimeRecoveryStatus getPointInTimeRecoveryStatus() {
    return pointInTimeRecoveryStatus;
  }

  public void setPointInTimeRecoveryStatus(@javax.annotation.Nullable PointInTimeRecoveryStatus pointInTimeRecoveryStatus) {
    this.pointInTimeRecoveryStatus = pointInTimeRecoveryStatus;
  }


  public PointInTimeRecoveryDescription earliestRestorableDateTime(@javax.annotation.Nullable OffsetDateTime earliestRestorableDateTime) {
    this.earliestRestorableDateTime = earliestRestorableDateTime;
    return this;
  }

  /**
   * Specifies the earliest point in time you can restore your table to. You can restore your table to any point in time during the last 35 days. 
   * @return earliestRestorableDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEarliestRestorableDateTime() {
    return earliestRestorableDateTime;
  }

  public void setEarliestRestorableDateTime(@javax.annotation.Nullable OffsetDateTime earliestRestorableDateTime) {
    this.earliestRestorableDateTime = earliestRestorableDateTime;
  }


  public PointInTimeRecoveryDescription latestRestorableDateTime(@javax.annotation.Nullable OffsetDateTime latestRestorableDateTime) {
    this.latestRestorableDateTime = latestRestorableDateTime;
    return this;
  }

  /**
   *  &lt;code&gt;LatestRestorableDateTime&lt;/code&gt; is typically 5 minutes before the current time. 
   * @return latestRestorableDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLatestRestorableDateTime() {
    return latestRestorableDateTime;
  }

  public void setLatestRestorableDateTime(@javax.annotation.Nullable OffsetDateTime latestRestorableDateTime) {
    this.latestRestorableDateTime = latestRestorableDateTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PointInTimeRecoveryDescription pointInTimeRecoveryDescription = (PointInTimeRecoveryDescription) o;
    return Objects.equals(this.pointInTimeRecoveryStatus, pointInTimeRecoveryDescription.pointInTimeRecoveryStatus) &&
        Objects.equals(this.earliestRestorableDateTime, pointInTimeRecoveryDescription.earliestRestorableDateTime) &&
        Objects.equals(this.latestRestorableDateTime, pointInTimeRecoveryDescription.latestRestorableDateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pointInTimeRecoveryStatus, earliestRestorableDateTime, latestRestorableDateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PointInTimeRecoveryDescription {\n");
    sb.append("    pointInTimeRecoveryStatus: ").append(toIndentedString(pointInTimeRecoveryStatus)).append("\n");
    sb.append("    earliestRestorableDateTime: ").append(toIndentedString(earliestRestorableDateTime)).append("\n");
    sb.append("    latestRestorableDateTime: ").append(toIndentedString(latestRestorableDateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("PointInTimeRecoveryStatus", "EarliestRestorableDateTime", "LatestRestorableDateTime"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PointInTimeRecoveryDescription
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PointInTimeRecoveryDescription.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PointInTimeRecoveryDescription is not found in the empty JSON string", PointInTimeRecoveryDescription.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PointInTimeRecoveryDescription.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PointInTimeRecoveryDescription` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `PointInTimeRecoveryStatus`
      if (jsonObj.get("PointInTimeRecoveryStatus") != null && !jsonObj.get("PointInTimeRecoveryStatus").isJsonNull()) {
        PointInTimeRecoveryStatus.validateJsonElement(jsonObj.get("PointInTimeRecoveryStatus"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PointInTimeRecoveryDescription.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PointInTimeRecoveryDescription' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PointInTimeRecoveryDescription> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PointInTimeRecoveryDescription.class));

       return (TypeAdapter<T>) new TypeAdapter<PointInTimeRecoveryDescription>() {
           @Override
           public void write(JsonWriter out, PointInTimeRecoveryDescription value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PointInTimeRecoveryDescription read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PointInTimeRecoveryDescription given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PointInTimeRecoveryDescription
   * @throws IOException if the JSON string is invalid with respect to PointInTimeRecoveryDescription
   */
  public static PointInTimeRecoveryDescription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PointInTimeRecoveryDescription.class);
  }

  /**
   * Convert an instance of PointInTimeRecoveryDescription to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

