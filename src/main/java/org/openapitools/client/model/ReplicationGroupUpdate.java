/*
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateReplicationGroupMemberAction;
import org.openapitools.client.model.DeleteReplicationGroupMemberAction;
import org.openapitools.client.model.UpdateReplicationGroupMemberAction;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;Represents one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A new replica to be added to an existing regional table or global table. This request invokes the &lt;code&gt;CreateTableReplica&lt;/code&gt; action in the destination Region.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New parameters for an existing replica. This request invokes the &lt;code&gt;UpdateTable&lt;/code&gt; action in the destination Region.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;An existing replica to be deleted. The request invokes the &lt;code&gt;DeleteTableReplica&lt;/code&gt; action in the destination Region, deleting the replica and all if its items in the destination Region.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;note&gt; &lt;p&gt;When you manually remove a table or global table replica, you do not automatically remove any associated scalable targets, scaling policies, or CloudWatch alarms.&lt;/p&gt; &lt;/note&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T14:20:21.724079+05:30[Asia/Kolkata]", comments = "Generator version: 7.15.0")
public class ReplicationGroupUpdate {
  public static final String SERIALIZED_NAME_CREATE = "Create";
  @SerializedName(SERIALIZED_NAME_CREATE)
  @javax.annotation.Nullable
  private CreateReplicationGroupMemberAction create;

  public static final String SERIALIZED_NAME_UPDATE = "Update";
  @SerializedName(SERIALIZED_NAME_UPDATE)
  @javax.annotation.Nullable
  private UpdateReplicationGroupMemberAction update;

  public static final String SERIALIZED_NAME_DELETE = "Delete";
  @SerializedName(SERIALIZED_NAME_DELETE)
  @javax.annotation.Nullable
  private DeleteReplicationGroupMemberAction delete;

  public ReplicationGroupUpdate() {
  }

  public ReplicationGroupUpdate create(@javax.annotation.Nullable CreateReplicationGroupMemberAction create) {
    this.create = create;
    return this;
  }

  /**
   * The parameters required for creating a replica for the table.
   * @return create
   */
  @javax.annotation.Nullable
  public CreateReplicationGroupMemberAction getCreate() {
    return create;
  }

  public void setCreate(@javax.annotation.Nullable CreateReplicationGroupMemberAction create) {
    this.create = create;
  }


  public ReplicationGroupUpdate update(@javax.annotation.Nullable UpdateReplicationGroupMemberAction update) {
    this.update = update;
    return this;
  }

  /**
   * The parameters required for updating a replica for the table.
   * @return update
   */
  @javax.annotation.Nullable
  public UpdateReplicationGroupMemberAction getUpdate() {
    return update;
  }

  public void setUpdate(@javax.annotation.Nullable UpdateReplicationGroupMemberAction update) {
    this.update = update;
  }


  public ReplicationGroupUpdate delete(@javax.annotation.Nullable DeleteReplicationGroupMemberAction delete) {
    this.delete = delete;
    return this;
  }

  /**
   * The parameters required for deleting a replica for the table.
   * @return delete
   */
  @javax.annotation.Nullable
  public DeleteReplicationGroupMemberAction getDelete() {
    return delete;
  }

  public void setDelete(@javax.annotation.Nullable DeleteReplicationGroupMemberAction delete) {
    this.delete = delete;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReplicationGroupUpdate replicationGroupUpdate = (ReplicationGroupUpdate) o;
    return Objects.equals(this.create, replicationGroupUpdate.create) &&
        Objects.equals(this.update, replicationGroupUpdate.update) &&
        Objects.equals(this.delete, replicationGroupUpdate.delete);
  }

  @Override
  public int hashCode() {
    return Objects.hash(create, update, delete);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReplicationGroupUpdate {\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    delete: ").append(toIndentedString(delete)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("Create", "Update", "Delete"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ReplicationGroupUpdate
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ReplicationGroupUpdate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ReplicationGroupUpdate is not found in the empty JSON string", ReplicationGroupUpdate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ReplicationGroupUpdate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ReplicationGroupUpdate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Create`
      if (jsonObj.get("Create") != null && !jsonObj.get("Create").isJsonNull()) {
        CreateReplicationGroupMemberAction.validateJsonElement(jsonObj.get("Create"));
      }
      // validate the optional field `Update`
      if (jsonObj.get("Update") != null && !jsonObj.get("Update").isJsonNull()) {
        UpdateReplicationGroupMemberAction.validateJsonElement(jsonObj.get("Update"));
      }
      // validate the optional field `Delete`
      if (jsonObj.get("Delete") != null && !jsonObj.get("Delete").isJsonNull()) {
        DeleteReplicationGroupMemberAction.validateJsonElement(jsonObj.get("Delete"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ReplicationGroupUpdate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ReplicationGroupUpdate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ReplicationGroupUpdate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ReplicationGroupUpdate.class));

       return (TypeAdapter<T>) new TypeAdapter<ReplicationGroupUpdate>() {
           @Override
           public void write(JsonWriter out, ReplicationGroupUpdate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ReplicationGroupUpdate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ReplicationGroupUpdate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ReplicationGroupUpdate
   * @throws IOException if the JSON string is invalid with respect to ReplicationGroupUpdate
   */
  public static ReplicationGroupUpdate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ReplicationGroupUpdate.class);
  }

  /**
   * Convert an instance of ReplicationGroupUpdate to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

