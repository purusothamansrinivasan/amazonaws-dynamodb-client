/*
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ContributorInsightsStatus;
import org.openapitools.client.model.FailureException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeContributorInsightsOutput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T14:20:21.724079+05:30[Asia/Kolkata]", comments = "Generator version: 7.15.0")
public class DescribeContributorInsightsOutput {
  public static final String SERIALIZED_NAME_TABLE_NAME = "TableName";
  @SerializedName(SERIALIZED_NAME_TABLE_NAME)
  @javax.annotation.Nullable
  private String tableName;

  public static final String SERIALIZED_NAME_INDEX_NAME = "IndexName";
  @SerializedName(SERIALIZED_NAME_INDEX_NAME)
  @javax.annotation.Nullable
  private String indexName;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_INSIGHTS_RULE_LIST = "ContributorInsightsRuleList";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_INSIGHTS_RULE_LIST)
  @javax.annotation.Nullable
  private List<String> contributorInsightsRuleList;

  public static final String SERIALIZED_NAME_CONTRIBUTOR_INSIGHTS_STATUS = "ContributorInsightsStatus";
  @SerializedName(SERIALIZED_NAME_CONTRIBUTOR_INSIGHTS_STATUS)
  @javax.annotation.Nullable
  private ContributorInsightsStatus contributorInsightsStatus;

  public static final String SERIALIZED_NAME_LAST_UPDATE_DATE_TIME = "LastUpdateDateTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATE_DATE_TIME)
  @javax.annotation.Nullable
  private OffsetDateTime lastUpdateDateTime;

  public static final String SERIALIZED_NAME_FAILURE_EXCEPTION = "FailureException";
  @SerializedName(SERIALIZED_NAME_FAILURE_EXCEPTION)
  @javax.annotation.Nullable
  private FailureException failureException;

  public DescribeContributorInsightsOutput() {
  }

  public DescribeContributorInsightsOutput tableName(@javax.annotation.Nullable String tableName) {
    this.tableName = tableName;
    return this;
  }

  /**
   * The name of the table being described.
   * @return tableName
   */
  @javax.annotation.Nullable
  public String getTableName() {
    return tableName;
  }

  public void setTableName(@javax.annotation.Nullable String tableName) {
    this.tableName = tableName;
  }


  public DescribeContributorInsightsOutput indexName(@javax.annotation.Nullable String indexName) {
    this.indexName = indexName;
    return this;
  }

  /**
   * The name of the global secondary index being described.
   * @return indexName
   */
  @javax.annotation.Nullable
  public String getIndexName() {
    return indexName;
  }

  public void setIndexName(@javax.annotation.Nullable String indexName) {
    this.indexName = indexName;
  }


  public DescribeContributorInsightsOutput contributorInsightsRuleList(@javax.annotation.Nullable List<String> contributorInsightsRuleList) {
    this.contributorInsightsRuleList = contributorInsightsRuleList;
    return this;
  }

  public DescribeContributorInsightsOutput addContributorInsightsRuleListItem(String contributorInsightsRuleListItem) {
    if (this.contributorInsightsRuleList == null) {
      this.contributorInsightsRuleList = new ArrayList<>();
    }
    this.contributorInsightsRuleList.add(contributorInsightsRuleListItem);
    return this;
  }

  /**
   * List of names of the associated contributor insights rules.
   * @return contributorInsightsRuleList
   */
  @javax.annotation.Nullable
  public List<String> getContributorInsightsRuleList() {
    return contributorInsightsRuleList;
  }

  public void setContributorInsightsRuleList(@javax.annotation.Nullable List<String> contributorInsightsRuleList) {
    this.contributorInsightsRuleList = contributorInsightsRuleList;
  }


  public DescribeContributorInsightsOutput contributorInsightsStatus(@javax.annotation.Nullable ContributorInsightsStatus contributorInsightsStatus) {
    this.contributorInsightsStatus = contributorInsightsStatus;
    return this;
  }

  /**
   * Current status of contributor insights.
   * @return contributorInsightsStatus
   */
  @javax.annotation.Nullable
  public ContributorInsightsStatus getContributorInsightsStatus() {
    return contributorInsightsStatus;
  }

  public void setContributorInsightsStatus(@javax.annotation.Nullable ContributorInsightsStatus contributorInsightsStatus) {
    this.contributorInsightsStatus = contributorInsightsStatus;
  }


  public DescribeContributorInsightsOutput lastUpdateDateTime(@javax.annotation.Nullable OffsetDateTime lastUpdateDateTime) {
    this.lastUpdateDateTime = lastUpdateDateTime;
    return this;
  }

  /**
   * Timestamp of the last time the status was changed.
   * @return lastUpdateDateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdateDateTime() {
    return lastUpdateDateTime;
  }

  public void setLastUpdateDateTime(@javax.annotation.Nullable OffsetDateTime lastUpdateDateTime) {
    this.lastUpdateDateTime = lastUpdateDateTime;
  }


  public DescribeContributorInsightsOutput failureException(@javax.annotation.Nullable FailureException failureException) {
    this.failureException = failureException;
    return this;
  }

  /**
   * &lt;p&gt;Returns information about the last failure that was encountered.&lt;/p&gt; &lt;p&gt;The most common exceptions for a FAILED status are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;LimitExceededException - Per-account Amazon CloudWatch Contributor Insights rule limit reached. Please disable Contributor Insights for other tables/indexes OR disable Contributor Insights rules before retrying.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;AccessDeniedException - Amazon CloudWatch Contributor Insights rules cannot be modified due to insufficient permissions.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;AccessDeniedException - Failed to create service-linked role for Contributor Insights due to insufficient permissions.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;InternalServerError - Failed to create Amazon CloudWatch Contributor Insights rules. Please retry request.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
   * @return failureException
   */
  @javax.annotation.Nullable
  public FailureException getFailureException() {
    return failureException;
  }

  public void setFailureException(@javax.annotation.Nullable FailureException failureException) {
    this.failureException = failureException;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeContributorInsightsOutput describeContributorInsightsOutput = (DescribeContributorInsightsOutput) o;
    return Objects.equals(this.tableName, describeContributorInsightsOutput.tableName) &&
        Objects.equals(this.indexName, describeContributorInsightsOutput.indexName) &&
        Objects.equals(this.contributorInsightsRuleList, describeContributorInsightsOutput.contributorInsightsRuleList) &&
        Objects.equals(this.contributorInsightsStatus, describeContributorInsightsOutput.contributorInsightsStatus) &&
        Objects.equals(this.lastUpdateDateTime, describeContributorInsightsOutput.lastUpdateDateTime) &&
        Objects.equals(this.failureException, describeContributorInsightsOutput.failureException);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tableName, indexName, contributorInsightsRuleList, contributorInsightsStatus, lastUpdateDateTime, failureException);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeContributorInsightsOutput {\n");
    sb.append("    tableName: ").append(toIndentedString(tableName)).append("\n");
    sb.append("    indexName: ").append(toIndentedString(indexName)).append("\n");
    sb.append("    contributorInsightsRuleList: ").append(toIndentedString(contributorInsightsRuleList)).append("\n");
    sb.append("    contributorInsightsStatus: ").append(toIndentedString(contributorInsightsStatus)).append("\n");
    sb.append("    lastUpdateDateTime: ").append(toIndentedString(lastUpdateDateTime)).append("\n");
    sb.append("    failureException: ").append(toIndentedString(failureException)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("TableName", "IndexName", "ContributorInsightsRuleList", "ContributorInsightsStatus", "LastUpdateDateTime", "FailureException"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeContributorInsightsOutput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeContributorInsightsOutput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeContributorInsightsOutput is not found in the empty JSON string", DescribeContributorInsightsOutput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeContributorInsightsOutput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeContributorInsightsOutput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("TableName") != null && !jsonObj.get("TableName").isJsonNull()) && !jsonObj.get("TableName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TableName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TableName").toString()));
      }
      if ((jsonObj.get("IndexName") != null && !jsonObj.get("IndexName").isJsonNull()) && !jsonObj.get("IndexName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IndexName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IndexName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("ContributorInsightsRuleList") != null && !jsonObj.get("ContributorInsightsRuleList").isJsonNull() && !jsonObj.get("ContributorInsightsRuleList").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ContributorInsightsRuleList` to be an array in the JSON string but got `%s`", jsonObj.get("ContributorInsightsRuleList").toString()));
      }
      // validate the optional field `ContributorInsightsStatus`
      if (jsonObj.get("ContributorInsightsStatus") != null && !jsonObj.get("ContributorInsightsStatus").isJsonNull()) {
        ContributorInsightsStatus.validateJsonElement(jsonObj.get("ContributorInsightsStatus"));
      }
      // validate the optional field `FailureException`
      if (jsonObj.get("FailureException") != null && !jsonObj.get("FailureException").isJsonNull()) {
        FailureException.validateJsonElement(jsonObj.get("FailureException"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeContributorInsightsOutput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeContributorInsightsOutput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeContributorInsightsOutput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeContributorInsightsOutput.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeContributorInsightsOutput>() {
           @Override
           public void write(JsonWriter out, DescribeContributorInsightsOutput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeContributorInsightsOutput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeContributorInsightsOutput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeContributorInsightsOutput
   * @throws IOException if the JSON string is invalid with respect to DescribeContributorInsightsOutput
   */
  public static DescribeContributorInsightsOutput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeContributorInsightsOutput.class);
  }

  /**
   * Convert an instance of DescribeContributorInsightsOutput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

