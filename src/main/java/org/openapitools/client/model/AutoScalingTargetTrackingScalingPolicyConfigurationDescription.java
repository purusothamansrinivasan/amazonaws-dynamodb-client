/*
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the properties of a target tracking scaling policy.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T14:20:21.724079+05:30[Asia/Kolkata]", comments = "Generator version: 7.15.0")
public class AutoScalingTargetTrackingScalingPolicyConfigurationDescription {
  public static final String SERIALIZED_NAME_DISABLE_SCALE_IN = "DisableScaleIn";
  @SerializedName(SERIALIZED_NAME_DISABLE_SCALE_IN)
  @javax.annotation.Nullable
  private Boolean disableScaleIn;

  public static final String SERIALIZED_NAME_SCALE_IN_COOLDOWN = "ScaleInCooldown";
  @SerializedName(SERIALIZED_NAME_SCALE_IN_COOLDOWN)
  @javax.annotation.Nullable
  private Integer scaleInCooldown;

  public static final String SERIALIZED_NAME_SCALE_OUT_COOLDOWN = "ScaleOutCooldown";
  @SerializedName(SERIALIZED_NAME_SCALE_OUT_COOLDOWN)
  @javax.annotation.Nullable
  private Integer scaleOutCooldown;

  public static final String SERIALIZED_NAME_TARGET_VALUE = "TargetValue";
  @SerializedName(SERIALIZED_NAME_TARGET_VALUE)
  @javax.annotation.Nonnull
  private Double targetValue;

  public AutoScalingTargetTrackingScalingPolicyConfigurationDescription() {
  }

  public AutoScalingTargetTrackingScalingPolicyConfigurationDescription disableScaleIn(@javax.annotation.Nullable Boolean disableScaleIn) {
    this.disableScaleIn = disableScaleIn;
    return this;
  }

  /**
   * Indicates whether scale in by the target tracking policy is disabled. If the value is true, scale in is disabled and the target tracking policy won&#39;t remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking policy can remove capacity from the scalable resource. The default value is false.
   * @return disableScaleIn
   */
  @javax.annotation.Nullable
  public Boolean getDisableScaleIn() {
    return disableScaleIn;
  }

  public void setDisableScaleIn(@javax.annotation.Nullable Boolean disableScaleIn) {
    this.disableScaleIn = disableScaleIn;
  }


  public AutoScalingTargetTrackingScalingPolicyConfigurationDescription scaleInCooldown(@javax.annotation.Nullable Integer scaleInCooldown) {
    this.scaleInCooldown = scaleInCooldown;
    return this;
  }

  /**
   * The amount of time, in seconds, after a scale in activity completes before another scale in activity can start. The cooldown period is used to block subsequent scale in requests until it has expired. You should scale in conservatively to protect your application&#39;s availability. However, if another alarm triggers a scale out policy during the cooldown period after a scale-in, application auto scaling scales out your scalable target immediately. 
   * @return scaleInCooldown
   */
  @javax.annotation.Nullable
  public Integer getScaleInCooldown() {
    return scaleInCooldown;
  }

  public void setScaleInCooldown(@javax.annotation.Nullable Integer scaleInCooldown) {
    this.scaleInCooldown = scaleInCooldown;
  }


  public AutoScalingTargetTrackingScalingPolicyConfigurationDescription scaleOutCooldown(@javax.annotation.Nullable Integer scaleOutCooldown) {
    this.scaleOutCooldown = scaleOutCooldown;
    return this;
  }

  /**
   * The amount of time, in seconds, after a scale out activity completes before another scale out activity can start. While the cooldown period is in effect, the capacity that has been added by the previous scale out event that initiated the cooldown is calculated as part of the desired capacity for the next scale out. You should continuously (but not excessively) scale out.
   * @return scaleOutCooldown
   */
  @javax.annotation.Nullable
  public Integer getScaleOutCooldown() {
    return scaleOutCooldown;
  }

  public void setScaleOutCooldown(@javax.annotation.Nullable Integer scaleOutCooldown) {
    this.scaleOutCooldown = scaleOutCooldown;
  }


  public AutoScalingTargetTrackingScalingPolicyConfigurationDescription targetValue(@javax.annotation.Nonnull Double targetValue) {
    this.targetValue = targetValue;
    return this;
  }

  /**
   * The target value for the metric. The range is 8.515920e-109 to 1.174271e+108 (Base 10) or 2e-360 to 2e360 (Base 2).
   * @return targetValue
   */
  @javax.annotation.Nonnull
  public Double getTargetValue() {
    return targetValue;
  }

  public void setTargetValue(@javax.annotation.Nonnull Double targetValue) {
    this.targetValue = targetValue;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoScalingTargetTrackingScalingPolicyConfigurationDescription autoScalingTargetTrackingScalingPolicyConfigurationDescription = (AutoScalingTargetTrackingScalingPolicyConfigurationDescription) o;
    return Objects.equals(this.disableScaleIn, autoScalingTargetTrackingScalingPolicyConfigurationDescription.disableScaleIn) &&
        Objects.equals(this.scaleInCooldown, autoScalingTargetTrackingScalingPolicyConfigurationDescription.scaleInCooldown) &&
        Objects.equals(this.scaleOutCooldown, autoScalingTargetTrackingScalingPolicyConfigurationDescription.scaleOutCooldown) &&
        Objects.equals(this.targetValue, autoScalingTargetTrackingScalingPolicyConfigurationDescription.targetValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(disableScaleIn, scaleInCooldown, scaleOutCooldown, targetValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoScalingTargetTrackingScalingPolicyConfigurationDescription {\n");
    sb.append("    disableScaleIn: ").append(toIndentedString(disableScaleIn)).append("\n");
    sb.append("    scaleInCooldown: ").append(toIndentedString(scaleInCooldown)).append("\n");
    sb.append("    scaleOutCooldown: ").append(toIndentedString(scaleOutCooldown)).append("\n");
    sb.append("    targetValue: ").append(toIndentedString(targetValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("DisableScaleIn", "ScaleInCooldown", "ScaleOutCooldown", "TargetValue"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(Arrays.asList("TargetValue"));
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AutoScalingTargetTrackingScalingPolicyConfigurationDescription
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AutoScalingTargetTrackingScalingPolicyConfigurationDescription.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AutoScalingTargetTrackingScalingPolicyConfigurationDescription is not found in the empty JSON string", AutoScalingTargetTrackingScalingPolicyConfigurationDescription.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AutoScalingTargetTrackingScalingPolicyConfigurationDescription.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AutoScalingTargetTrackingScalingPolicyConfigurationDescription` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AutoScalingTargetTrackingScalingPolicyConfigurationDescription.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AutoScalingTargetTrackingScalingPolicyConfigurationDescription.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AutoScalingTargetTrackingScalingPolicyConfigurationDescription' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AutoScalingTargetTrackingScalingPolicyConfigurationDescription> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AutoScalingTargetTrackingScalingPolicyConfigurationDescription.class));

       return (TypeAdapter<T>) new TypeAdapter<AutoScalingTargetTrackingScalingPolicyConfigurationDescription>() {
           @Override
           public void write(JsonWriter out, AutoScalingTargetTrackingScalingPolicyConfigurationDescription value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AutoScalingTargetTrackingScalingPolicyConfigurationDescription read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AutoScalingTargetTrackingScalingPolicyConfigurationDescription given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AutoScalingTargetTrackingScalingPolicyConfigurationDescription
   * @throws IOException if the JSON string is invalid with respect to AutoScalingTargetTrackingScalingPolicyConfigurationDescription
   */
  public static AutoScalingTargetTrackingScalingPolicyConfigurationDescription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AutoScalingTargetTrackingScalingPolicyConfigurationDescription.class);
  }

  /**
   * Convert an instance of AutoScalingTargetTrackingScalingPolicyConfigurationDescription to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

