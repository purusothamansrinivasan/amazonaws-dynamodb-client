/*
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AutoScalingSettingsUpdate;
import org.openapitools.client.model.BillingMode;
import org.openapitools.client.model.GlobalTableGlobalSecondaryIndexSettingsUpdate;
import org.openapitools.client.model.ReplicaSettingsUpdate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateGlobalTableSettingsInput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T14:20:21.724079+05:30[Asia/Kolkata]", comments = "Generator version: 7.15.0")
public class UpdateGlobalTableSettingsInput {
  public static final String SERIALIZED_NAME_GLOBAL_TABLE_NAME = "GlobalTableName";
  @SerializedName(SERIALIZED_NAME_GLOBAL_TABLE_NAME)
  @javax.annotation.Nonnull
  private String globalTableName;

  public static final String SERIALIZED_NAME_GLOBAL_TABLE_BILLING_MODE = "GlobalTableBillingMode";
  @SerializedName(SERIALIZED_NAME_GLOBAL_TABLE_BILLING_MODE)
  @javax.annotation.Nullable
  private BillingMode globalTableBillingMode;

  public static final String SERIALIZED_NAME_GLOBAL_TABLE_PROVISIONED_WRITE_CAPACITY_UNITS = "GlobalTableProvisionedWriteCapacityUnits";
  @SerializedName(SERIALIZED_NAME_GLOBAL_TABLE_PROVISIONED_WRITE_CAPACITY_UNITS)
  @javax.annotation.Nullable
  private Integer globalTableProvisionedWriteCapacityUnits;

  public static final String SERIALIZED_NAME_GLOBAL_TABLE_PROVISIONED_WRITE_CAPACITY_AUTO_SCALING_SETTINGS_UPDATE = "GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate";
  @SerializedName(SERIALIZED_NAME_GLOBAL_TABLE_PROVISIONED_WRITE_CAPACITY_AUTO_SCALING_SETTINGS_UPDATE)
  @javax.annotation.Nullable
  private AutoScalingSettingsUpdate globalTableProvisionedWriteCapacityAutoScalingSettingsUpdate;

  public static final String SERIALIZED_NAME_GLOBAL_TABLE_GLOBAL_SECONDARY_INDEX_SETTINGS_UPDATE = "GlobalTableGlobalSecondaryIndexSettingsUpdate";
  @SerializedName(SERIALIZED_NAME_GLOBAL_TABLE_GLOBAL_SECONDARY_INDEX_SETTINGS_UPDATE)
  @javax.annotation.Nullable
  private List<GlobalTableGlobalSecondaryIndexSettingsUpdate> globalTableGlobalSecondaryIndexSettingsUpdate;

  public static final String SERIALIZED_NAME_REPLICA_SETTINGS_UPDATE = "ReplicaSettingsUpdate";
  @SerializedName(SERIALIZED_NAME_REPLICA_SETTINGS_UPDATE)
  @javax.annotation.Nullable
  private List<ReplicaSettingsUpdate> replicaSettingsUpdate;

  public UpdateGlobalTableSettingsInput() {
  }

  public UpdateGlobalTableSettingsInput globalTableName(@javax.annotation.Nonnull String globalTableName) {
    this.globalTableName = globalTableName;
    return this;
  }

  /**
   * The name of the global table
   * @return globalTableName
   */
  @javax.annotation.Nonnull
  public String getGlobalTableName() {
    return globalTableName;
  }

  public void setGlobalTableName(@javax.annotation.Nonnull String globalTableName) {
    this.globalTableName = globalTableName;
  }


  public UpdateGlobalTableSettingsInput globalTableBillingMode(@javax.annotation.Nullable BillingMode globalTableBillingMode) {
    this.globalTableBillingMode = globalTableBillingMode;
    return this;
  }

  /**
   * &lt;p&gt;The billing mode of the global table. If &lt;code&gt;GlobalTableBillingMode&lt;/code&gt; is not specified, the global table defaults to &lt;code&gt;PROVISIONED&lt;/code&gt; capacity billing mode.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;PROVISIONED&lt;/code&gt; - We recommend using &lt;code&gt;PROVISIONED&lt;/code&gt; for predictable workloads. &lt;code&gt;PROVISIONED&lt;/code&gt; sets the billing mode to &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.ProvisionedThroughput.Manual\&quot;&gt;Provisioned Mode&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;PAY_PER_REQUEST&lt;/code&gt; - We recommend using &lt;code&gt;PAY_PER_REQUEST&lt;/code&gt; for unpredictable workloads. &lt;code&gt;PAY_PER_REQUEST&lt;/code&gt; sets the billing mode to &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.OnDemand\&quot;&gt;On-Demand Mode&lt;/a&gt;. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
   * @return globalTableBillingMode
   */
  @javax.annotation.Nullable
  public BillingMode getGlobalTableBillingMode() {
    return globalTableBillingMode;
  }

  public void setGlobalTableBillingMode(@javax.annotation.Nullable BillingMode globalTableBillingMode) {
    this.globalTableBillingMode = globalTableBillingMode;
  }


  public UpdateGlobalTableSettingsInput globalTableProvisionedWriteCapacityUnits(@javax.annotation.Nullable Integer globalTableProvisionedWriteCapacityUnits) {
    this.globalTableProvisionedWriteCapacityUnits = globalTableProvisionedWriteCapacityUnits;
    return this;
  }

  /**
   * The maximum number of writes consumed per second before DynamoDB returns a &lt;code&gt;ThrottlingException.&lt;/code&gt; 
   * minimum: 1
   * @return globalTableProvisionedWriteCapacityUnits
   */
  @javax.annotation.Nullable
  public Integer getGlobalTableProvisionedWriteCapacityUnits() {
    return globalTableProvisionedWriteCapacityUnits;
  }

  public void setGlobalTableProvisionedWriteCapacityUnits(@javax.annotation.Nullable Integer globalTableProvisionedWriteCapacityUnits) {
    this.globalTableProvisionedWriteCapacityUnits = globalTableProvisionedWriteCapacityUnits;
  }


  public UpdateGlobalTableSettingsInput globalTableProvisionedWriteCapacityAutoScalingSettingsUpdate(@javax.annotation.Nullable AutoScalingSettingsUpdate globalTableProvisionedWriteCapacityAutoScalingSettingsUpdate) {
    this.globalTableProvisionedWriteCapacityAutoScalingSettingsUpdate = globalTableProvisionedWriteCapacityAutoScalingSettingsUpdate;
    return this;
  }

  /**
   * Auto scaling settings for managing provisioned write capacity for the global table.
   * @return globalTableProvisionedWriteCapacityAutoScalingSettingsUpdate
   */
  @javax.annotation.Nullable
  public AutoScalingSettingsUpdate getGlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate() {
    return globalTableProvisionedWriteCapacityAutoScalingSettingsUpdate;
  }

  public void setGlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate(@javax.annotation.Nullable AutoScalingSettingsUpdate globalTableProvisionedWriteCapacityAutoScalingSettingsUpdate) {
    this.globalTableProvisionedWriteCapacityAutoScalingSettingsUpdate = globalTableProvisionedWriteCapacityAutoScalingSettingsUpdate;
  }


  public UpdateGlobalTableSettingsInput globalTableGlobalSecondaryIndexSettingsUpdate(@javax.annotation.Nullable List<GlobalTableGlobalSecondaryIndexSettingsUpdate> globalTableGlobalSecondaryIndexSettingsUpdate) {
    this.globalTableGlobalSecondaryIndexSettingsUpdate = globalTableGlobalSecondaryIndexSettingsUpdate;
    return this;
  }

  public UpdateGlobalTableSettingsInput addGlobalTableGlobalSecondaryIndexSettingsUpdateItem(GlobalTableGlobalSecondaryIndexSettingsUpdate globalTableGlobalSecondaryIndexSettingsUpdateItem) {
    if (this.globalTableGlobalSecondaryIndexSettingsUpdate == null) {
      this.globalTableGlobalSecondaryIndexSettingsUpdate = new ArrayList<>();
    }
    this.globalTableGlobalSecondaryIndexSettingsUpdate.add(globalTableGlobalSecondaryIndexSettingsUpdateItem);
    return this;
  }

  /**
   * Represents the settings of a global secondary index for a global table that will be modified.
   * @return globalTableGlobalSecondaryIndexSettingsUpdate
   */
  @javax.annotation.Nullable
  public List<GlobalTableGlobalSecondaryIndexSettingsUpdate> getGlobalTableGlobalSecondaryIndexSettingsUpdate() {
    return globalTableGlobalSecondaryIndexSettingsUpdate;
  }

  public void setGlobalTableGlobalSecondaryIndexSettingsUpdate(@javax.annotation.Nullable List<GlobalTableGlobalSecondaryIndexSettingsUpdate> globalTableGlobalSecondaryIndexSettingsUpdate) {
    this.globalTableGlobalSecondaryIndexSettingsUpdate = globalTableGlobalSecondaryIndexSettingsUpdate;
  }


  public UpdateGlobalTableSettingsInput replicaSettingsUpdate(@javax.annotation.Nullable List<ReplicaSettingsUpdate> replicaSettingsUpdate) {
    this.replicaSettingsUpdate = replicaSettingsUpdate;
    return this;
  }

  public UpdateGlobalTableSettingsInput addReplicaSettingsUpdateItem(ReplicaSettingsUpdate replicaSettingsUpdateItem) {
    if (this.replicaSettingsUpdate == null) {
      this.replicaSettingsUpdate = new ArrayList<>();
    }
    this.replicaSettingsUpdate.add(replicaSettingsUpdateItem);
    return this;
  }

  /**
   * Represents the settings for a global table in a Region that will be modified.
   * @return replicaSettingsUpdate
   */
  @javax.annotation.Nullable
  public List<ReplicaSettingsUpdate> getReplicaSettingsUpdate() {
    return replicaSettingsUpdate;
  }

  public void setReplicaSettingsUpdate(@javax.annotation.Nullable List<ReplicaSettingsUpdate> replicaSettingsUpdate) {
    this.replicaSettingsUpdate = replicaSettingsUpdate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateGlobalTableSettingsInput updateGlobalTableSettingsInput = (UpdateGlobalTableSettingsInput) o;
    return Objects.equals(this.globalTableName, updateGlobalTableSettingsInput.globalTableName) &&
        Objects.equals(this.globalTableBillingMode, updateGlobalTableSettingsInput.globalTableBillingMode) &&
        Objects.equals(this.globalTableProvisionedWriteCapacityUnits, updateGlobalTableSettingsInput.globalTableProvisionedWriteCapacityUnits) &&
        Objects.equals(this.globalTableProvisionedWriteCapacityAutoScalingSettingsUpdate, updateGlobalTableSettingsInput.globalTableProvisionedWriteCapacityAutoScalingSettingsUpdate) &&
        Objects.equals(this.globalTableGlobalSecondaryIndexSettingsUpdate, updateGlobalTableSettingsInput.globalTableGlobalSecondaryIndexSettingsUpdate) &&
        Objects.equals(this.replicaSettingsUpdate, updateGlobalTableSettingsInput.replicaSettingsUpdate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(globalTableName, globalTableBillingMode, globalTableProvisionedWriteCapacityUnits, globalTableProvisionedWriteCapacityAutoScalingSettingsUpdate, globalTableGlobalSecondaryIndexSettingsUpdate, replicaSettingsUpdate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateGlobalTableSettingsInput {\n");
    sb.append("    globalTableName: ").append(toIndentedString(globalTableName)).append("\n");
    sb.append("    globalTableBillingMode: ").append(toIndentedString(globalTableBillingMode)).append("\n");
    sb.append("    globalTableProvisionedWriteCapacityUnits: ").append(toIndentedString(globalTableProvisionedWriteCapacityUnits)).append("\n");
    sb.append("    globalTableProvisionedWriteCapacityAutoScalingSettingsUpdate: ").append(toIndentedString(globalTableProvisionedWriteCapacityAutoScalingSettingsUpdate)).append("\n");
    sb.append("    globalTableGlobalSecondaryIndexSettingsUpdate: ").append(toIndentedString(globalTableGlobalSecondaryIndexSettingsUpdate)).append("\n");
    sb.append("    replicaSettingsUpdate: ").append(toIndentedString(replicaSettingsUpdate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("GlobalTableName", "GlobalTableBillingMode", "GlobalTableProvisionedWriteCapacityUnits", "GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate", "GlobalTableGlobalSecondaryIndexSettingsUpdate", "ReplicaSettingsUpdate"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(Arrays.asList("GlobalTableName"));
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateGlobalTableSettingsInput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateGlobalTableSettingsInput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateGlobalTableSettingsInput is not found in the empty JSON string", UpdateGlobalTableSettingsInput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateGlobalTableSettingsInput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateGlobalTableSettingsInput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdateGlobalTableSettingsInput.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("GlobalTableName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `GlobalTableName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("GlobalTableName").toString()));
      }
      // validate the optional field `GlobalTableBillingMode`
      if (jsonObj.get("GlobalTableBillingMode") != null && !jsonObj.get("GlobalTableBillingMode").isJsonNull()) {
        BillingMode.validateJsonElement(jsonObj.get("GlobalTableBillingMode"));
      }
      // validate the optional field `GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate`
      if (jsonObj.get("GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate") != null && !jsonObj.get("GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate").isJsonNull()) {
        AutoScalingSettingsUpdate.validateJsonElement(jsonObj.get("GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate"));
      }
      if (jsonObj.get("GlobalTableGlobalSecondaryIndexSettingsUpdate") != null && !jsonObj.get("GlobalTableGlobalSecondaryIndexSettingsUpdate").isJsonNull()) {
        JsonArray jsonArrayglobalTableGlobalSecondaryIndexSettingsUpdate = jsonObj.getAsJsonArray("GlobalTableGlobalSecondaryIndexSettingsUpdate");
        if (jsonArrayglobalTableGlobalSecondaryIndexSettingsUpdate != null) {
          // ensure the json data is an array
          if (!jsonObj.get("GlobalTableGlobalSecondaryIndexSettingsUpdate").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `GlobalTableGlobalSecondaryIndexSettingsUpdate` to be an array in the JSON string but got `%s`", jsonObj.get("GlobalTableGlobalSecondaryIndexSettingsUpdate").toString()));
          }

          // validate the optional field `GlobalTableGlobalSecondaryIndexSettingsUpdate` (array)
          for (int i = 0; i < jsonArrayglobalTableGlobalSecondaryIndexSettingsUpdate.size(); i++) {
            GlobalTableGlobalSecondaryIndexSettingsUpdate.validateJsonElement(jsonArrayglobalTableGlobalSecondaryIndexSettingsUpdate.get(i));
          };
        }
      }
      if (jsonObj.get("ReplicaSettingsUpdate") != null && !jsonObj.get("ReplicaSettingsUpdate").isJsonNull()) {
        JsonArray jsonArrayreplicaSettingsUpdate = jsonObj.getAsJsonArray("ReplicaSettingsUpdate");
        if (jsonArrayreplicaSettingsUpdate != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ReplicaSettingsUpdate").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ReplicaSettingsUpdate` to be an array in the JSON string but got `%s`", jsonObj.get("ReplicaSettingsUpdate").toString()));
          }

          // validate the optional field `ReplicaSettingsUpdate` (array)
          for (int i = 0; i < jsonArrayreplicaSettingsUpdate.size(); i++) {
            ReplicaSettingsUpdate.validateJsonElement(jsonArrayreplicaSettingsUpdate.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateGlobalTableSettingsInput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateGlobalTableSettingsInput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateGlobalTableSettingsInput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateGlobalTableSettingsInput.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateGlobalTableSettingsInput>() {
           @Override
           public void write(JsonWriter out, UpdateGlobalTableSettingsInput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateGlobalTableSettingsInput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateGlobalTableSettingsInput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateGlobalTableSettingsInput
   * @throws IOException if the JSON string is invalid with respect to UpdateGlobalTableSettingsInput
   */
  public static UpdateGlobalTableSettingsInput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateGlobalTableSettingsInput.class);
  }

  /**
   * Convert an instance of UpdateGlobalTableSettingsInput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

