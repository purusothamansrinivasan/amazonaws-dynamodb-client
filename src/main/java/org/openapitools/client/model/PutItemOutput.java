/*
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.AttributeValue;
import org.openapitools.client.model.ConsumedCapacity;
import org.openapitools.client.model.ItemCollectionMetrics;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the output of a &lt;code&gt;PutItem&lt;/code&gt; operation.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T14:20:21.724079+05:30[Asia/Kolkata]", comments = "Generator version: 7.15.0")
public class PutItemOutput {
  public static final String SERIALIZED_NAME_ATTRIBUTES = "Attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  @javax.annotation.Nullable
  private Map<String, AttributeValue> attributes;

  public static final String SERIALIZED_NAME_CONSUMED_CAPACITY = "ConsumedCapacity";
  @SerializedName(SERIALIZED_NAME_CONSUMED_CAPACITY)
  @javax.annotation.Nullable
  private ConsumedCapacity consumedCapacity;

  public static final String SERIALIZED_NAME_ITEM_COLLECTION_METRICS = "ItemCollectionMetrics";
  @SerializedName(SERIALIZED_NAME_ITEM_COLLECTION_METRICS)
  @javax.annotation.Nullable
  private ItemCollectionMetrics itemCollectionMetrics;

  public PutItemOutput() {
  }

  public PutItemOutput attributes(@javax.annotation.Nullable Map<String, AttributeValue> attributes) {
    this.attributes = attributes;
    return this;
  }

  public PutItemOutput putAttributesItem(String key, AttributeValue attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

  /**
   * The attribute values as they appeared before the &lt;code&gt;PutItem&lt;/code&gt; operation, but only if &lt;code&gt;ReturnValues&lt;/code&gt; is specified as &lt;code&gt;ALL_OLD&lt;/code&gt; in the request. Each element consists of an attribute name and an attribute value.
   * @return attributes
   */
  @javax.annotation.Nullable
  public Map<String, AttributeValue> getAttributes() {
    return attributes;
  }

  public void setAttributes(@javax.annotation.Nullable Map<String, AttributeValue> attributes) {
    this.attributes = attributes;
  }


  public PutItemOutput consumedCapacity(@javax.annotation.Nullable ConsumedCapacity consumedCapacity) {
    this.consumedCapacity = consumedCapacity;
    return this;
  }

  /**
   * The capacity units consumed by the &lt;code&gt;PutItem&lt;/code&gt; operation. The data returned includes the total provisioned throughput consumed, along with statistics for the table and any indexes involved in the operation. &lt;code&gt;ConsumedCapacity&lt;/code&gt; is only returned if the &lt;code&gt;ReturnConsumedCapacity&lt;/code&gt; parameter was specified. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html\&quot;&gt;Provisioned Throughput&lt;/a&gt; in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.
   * @return consumedCapacity
   */
  @javax.annotation.Nullable
  public ConsumedCapacity getConsumedCapacity() {
    return consumedCapacity;
  }

  public void setConsumedCapacity(@javax.annotation.Nullable ConsumedCapacity consumedCapacity) {
    this.consumedCapacity = consumedCapacity;
  }


  public PutItemOutput itemCollectionMetrics(@javax.annotation.Nullable ItemCollectionMetrics itemCollectionMetrics) {
    this.itemCollectionMetrics = itemCollectionMetrics;
    return this;
  }

  /**
   * &lt;p&gt;Information about item collections, if any, that were affected by the &lt;code&gt;PutItem&lt;/code&gt; operation. &lt;code&gt;ItemCollectionMetrics&lt;/code&gt; is only returned if the &lt;code&gt;ReturnItemCollectionMetrics&lt;/code&gt; parameter was specified. If the table does not have any local secondary indexes, this information is not returned in the response.&lt;/p&gt; &lt;p&gt;Each &lt;code&gt;ItemCollectionMetrics&lt;/code&gt; element consists of:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ItemCollectionKey&lt;/code&gt; - The partition key value of the item collection. This is the same as the partition key value of the item itself.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;SizeEstimateRangeGB&lt;/code&gt; - An estimate of item collection size, in gigabytes. This value is a two-element array containing a lower bound and an upper bound for the estimate. The estimate includes the size of all the items in the table, plus the size of all attributes projected into all of the local secondary indexes on that table. Use this estimate to measure whether a local secondary index is approaching its size limit.&lt;/p&gt; &lt;p&gt;The estimate is subject to change over time; therefore, do not rely on the precision or accuracy of the estimate.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
   * @return itemCollectionMetrics
   */
  @javax.annotation.Nullable
  public ItemCollectionMetrics getItemCollectionMetrics() {
    return itemCollectionMetrics;
  }

  public void setItemCollectionMetrics(@javax.annotation.Nullable ItemCollectionMetrics itemCollectionMetrics) {
    this.itemCollectionMetrics = itemCollectionMetrics;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutItemOutput putItemOutput = (PutItemOutput) o;
    return Objects.equals(this.attributes, putItemOutput.attributes) &&
        Objects.equals(this.consumedCapacity, putItemOutput.consumedCapacity) &&
        Objects.equals(this.itemCollectionMetrics, putItemOutput.itemCollectionMetrics);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, consumedCapacity, itemCollectionMetrics);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutItemOutput {\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    consumedCapacity: ").append(toIndentedString(consumedCapacity)).append("\n");
    sb.append("    itemCollectionMetrics: ").append(toIndentedString(itemCollectionMetrics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("Attributes", "ConsumedCapacity", "ItemCollectionMetrics"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PutItemOutput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PutItemOutput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PutItemOutput is not found in the empty JSON string", PutItemOutput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PutItemOutput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PutItemOutput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ConsumedCapacity`
      if (jsonObj.get("ConsumedCapacity") != null && !jsonObj.get("ConsumedCapacity").isJsonNull()) {
        ConsumedCapacity.validateJsonElement(jsonObj.get("ConsumedCapacity"));
      }
      // validate the optional field `ItemCollectionMetrics`
      if (jsonObj.get("ItemCollectionMetrics") != null && !jsonObj.get("ItemCollectionMetrics").isJsonNull()) {
        ItemCollectionMetrics.validateJsonElement(jsonObj.get("ItemCollectionMetrics"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PutItemOutput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PutItemOutput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PutItemOutput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PutItemOutput.class));

       return (TypeAdapter<T>) new TypeAdapter<PutItemOutput>() {
           @Override
           public void write(JsonWriter out, PutItemOutput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PutItemOutput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PutItemOutput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PutItemOutput
   * @throws IOException if the JSON string is invalid with respect to PutItemOutput
   */
  public static PutItemOutput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PutItemOutput.class);
  }

  /**
   * Convert an instance of PutItemOutput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

