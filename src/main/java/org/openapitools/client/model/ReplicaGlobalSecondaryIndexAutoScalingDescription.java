/*
 * Amazon DynamoDB
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don't have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.</p> <p>With DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables' throughput capacity without downtime or performance degradation, and use the Amazon Web Services Management Console to monitor resource utilization and performance metrics.</p> <p>DynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an Amazon Web Services Region, providing built-in high availability and data durability.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AutoScalingSettingsDescription;
import org.openapitools.client.model.IndexStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the auto scaling configuration for a replica global secondary index.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T14:20:21.724079+05:30[Asia/Kolkata]", comments = "Generator version: 7.15.0")
public class ReplicaGlobalSecondaryIndexAutoScalingDescription {
  public static final String SERIALIZED_NAME_INDEX_NAME = "IndexName";
  @SerializedName(SERIALIZED_NAME_INDEX_NAME)
  @javax.annotation.Nullable
  private String indexName;

  public static final String SERIALIZED_NAME_INDEX_STATUS = "IndexStatus";
  @SerializedName(SERIALIZED_NAME_INDEX_STATUS)
  @javax.annotation.Nullable
  private IndexStatus indexStatus;

  public static final String SERIALIZED_NAME_PROVISIONED_READ_CAPACITY_AUTO_SCALING_SETTINGS = "ProvisionedReadCapacityAutoScalingSettings";
  @SerializedName(SERIALIZED_NAME_PROVISIONED_READ_CAPACITY_AUTO_SCALING_SETTINGS)
  @javax.annotation.Nullable
  private AutoScalingSettingsDescription provisionedReadCapacityAutoScalingSettings;

  public static final String SERIALIZED_NAME_PROVISIONED_WRITE_CAPACITY_AUTO_SCALING_SETTINGS = "ProvisionedWriteCapacityAutoScalingSettings";
  @SerializedName(SERIALIZED_NAME_PROVISIONED_WRITE_CAPACITY_AUTO_SCALING_SETTINGS)
  @javax.annotation.Nullable
  private AutoScalingSettingsDescription provisionedWriteCapacityAutoScalingSettings;

  public ReplicaGlobalSecondaryIndexAutoScalingDescription() {
  }

  public ReplicaGlobalSecondaryIndexAutoScalingDescription indexName(@javax.annotation.Nullable String indexName) {
    this.indexName = indexName;
    return this;
  }

  /**
   * The name of the global secondary index.
   * @return indexName
   */
  @javax.annotation.Nullable
  public String getIndexName() {
    return indexName;
  }

  public void setIndexName(@javax.annotation.Nullable String indexName) {
    this.indexName = indexName;
  }


  public ReplicaGlobalSecondaryIndexAutoScalingDescription indexStatus(@javax.annotation.Nullable IndexStatus indexStatus) {
    this.indexStatus = indexStatus;
    return this;
  }

  /**
   * &lt;p&gt;The current state of the replica global secondary index:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;CREATING&lt;/code&gt; - The index is being created.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;UPDATING&lt;/code&gt; - The table/index configuration is being updated. The table/index remains available for data operations when &lt;code&gt;UPDATING&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;DELETING&lt;/code&gt; - The index is being deleted.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ACTIVE&lt;/code&gt; - The index is ready for use.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
   * @return indexStatus
   */
  @javax.annotation.Nullable
  public IndexStatus getIndexStatus() {
    return indexStatus;
  }

  public void setIndexStatus(@javax.annotation.Nullable IndexStatus indexStatus) {
    this.indexStatus = indexStatus;
  }


  public ReplicaGlobalSecondaryIndexAutoScalingDescription provisionedReadCapacityAutoScalingSettings(@javax.annotation.Nullable AutoScalingSettingsDescription provisionedReadCapacityAutoScalingSettings) {
    this.provisionedReadCapacityAutoScalingSettings = provisionedReadCapacityAutoScalingSettings;
    return this;
  }

  /**
   * Get provisionedReadCapacityAutoScalingSettings
   * @return provisionedReadCapacityAutoScalingSettings
   */
  @javax.annotation.Nullable
  public AutoScalingSettingsDescription getProvisionedReadCapacityAutoScalingSettings() {
    return provisionedReadCapacityAutoScalingSettings;
  }

  public void setProvisionedReadCapacityAutoScalingSettings(@javax.annotation.Nullable AutoScalingSettingsDescription provisionedReadCapacityAutoScalingSettings) {
    this.provisionedReadCapacityAutoScalingSettings = provisionedReadCapacityAutoScalingSettings;
  }


  public ReplicaGlobalSecondaryIndexAutoScalingDescription provisionedWriteCapacityAutoScalingSettings(@javax.annotation.Nullable AutoScalingSettingsDescription provisionedWriteCapacityAutoScalingSettings) {
    this.provisionedWriteCapacityAutoScalingSettings = provisionedWriteCapacityAutoScalingSettings;
    return this;
  }

  /**
   * Get provisionedWriteCapacityAutoScalingSettings
   * @return provisionedWriteCapacityAutoScalingSettings
   */
  @javax.annotation.Nullable
  public AutoScalingSettingsDescription getProvisionedWriteCapacityAutoScalingSettings() {
    return provisionedWriteCapacityAutoScalingSettings;
  }

  public void setProvisionedWriteCapacityAutoScalingSettings(@javax.annotation.Nullable AutoScalingSettingsDescription provisionedWriteCapacityAutoScalingSettings) {
    this.provisionedWriteCapacityAutoScalingSettings = provisionedWriteCapacityAutoScalingSettings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReplicaGlobalSecondaryIndexAutoScalingDescription replicaGlobalSecondaryIndexAutoScalingDescription = (ReplicaGlobalSecondaryIndexAutoScalingDescription) o;
    return Objects.equals(this.indexName, replicaGlobalSecondaryIndexAutoScalingDescription.indexName) &&
        Objects.equals(this.indexStatus, replicaGlobalSecondaryIndexAutoScalingDescription.indexStatus) &&
        Objects.equals(this.provisionedReadCapacityAutoScalingSettings, replicaGlobalSecondaryIndexAutoScalingDescription.provisionedReadCapacityAutoScalingSettings) &&
        Objects.equals(this.provisionedWriteCapacityAutoScalingSettings, replicaGlobalSecondaryIndexAutoScalingDescription.provisionedWriteCapacityAutoScalingSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(indexName, indexStatus, provisionedReadCapacityAutoScalingSettings, provisionedWriteCapacityAutoScalingSettings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReplicaGlobalSecondaryIndexAutoScalingDescription {\n");
    sb.append("    indexName: ").append(toIndentedString(indexName)).append("\n");
    sb.append("    indexStatus: ").append(toIndentedString(indexStatus)).append("\n");
    sb.append("    provisionedReadCapacityAutoScalingSettings: ").append(toIndentedString(provisionedReadCapacityAutoScalingSettings)).append("\n");
    sb.append("    provisionedWriteCapacityAutoScalingSettings: ").append(toIndentedString(provisionedWriteCapacityAutoScalingSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("IndexName", "IndexStatus", "ProvisionedReadCapacityAutoScalingSettings", "ProvisionedWriteCapacityAutoScalingSettings"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ReplicaGlobalSecondaryIndexAutoScalingDescription
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ReplicaGlobalSecondaryIndexAutoScalingDescription.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ReplicaGlobalSecondaryIndexAutoScalingDescription is not found in the empty JSON string", ReplicaGlobalSecondaryIndexAutoScalingDescription.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ReplicaGlobalSecondaryIndexAutoScalingDescription.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ReplicaGlobalSecondaryIndexAutoScalingDescription` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("IndexName") != null && !jsonObj.get("IndexName").isJsonNull()) && !jsonObj.get("IndexName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IndexName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IndexName").toString()));
      }
      // validate the optional field `IndexStatus`
      if (jsonObj.get("IndexStatus") != null && !jsonObj.get("IndexStatus").isJsonNull()) {
        IndexStatus.validateJsonElement(jsonObj.get("IndexStatus"));
      }
      // validate the optional field `ProvisionedReadCapacityAutoScalingSettings`
      if (jsonObj.get("ProvisionedReadCapacityAutoScalingSettings") != null && !jsonObj.get("ProvisionedReadCapacityAutoScalingSettings").isJsonNull()) {
        AutoScalingSettingsDescription.validateJsonElement(jsonObj.get("ProvisionedReadCapacityAutoScalingSettings"));
      }
      // validate the optional field `ProvisionedWriteCapacityAutoScalingSettings`
      if (jsonObj.get("ProvisionedWriteCapacityAutoScalingSettings") != null && !jsonObj.get("ProvisionedWriteCapacityAutoScalingSettings").isJsonNull()) {
        AutoScalingSettingsDescription.validateJsonElement(jsonObj.get("ProvisionedWriteCapacityAutoScalingSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ReplicaGlobalSecondaryIndexAutoScalingDescription.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ReplicaGlobalSecondaryIndexAutoScalingDescription' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ReplicaGlobalSecondaryIndexAutoScalingDescription> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ReplicaGlobalSecondaryIndexAutoScalingDescription.class));

       return (TypeAdapter<T>) new TypeAdapter<ReplicaGlobalSecondaryIndexAutoScalingDescription>() {
           @Override
           public void write(JsonWriter out, ReplicaGlobalSecondaryIndexAutoScalingDescription value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ReplicaGlobalSecondaryIndexAutoScalingDescription read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ReplicaGlobalSecondaryIndexAutoScalingDescription given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ReplicaGlobalSecondaryIndexAutoScalingDescription
   * @throws IOException if the JSON string is invalid with respect to ReplicaGlobalSecondaryIndexAutoScalingDescription
   */
  public static ReplicaGlobalSecondaryIndexAutoScalingDescription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ReplicaGlobalSecondaryIndexAutoScalingDescription.class);
  }

  /**
   * Convert an instance of ReplicaGlobalSecondaryIndexAutoScalingDescription to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

